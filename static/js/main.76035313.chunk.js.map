{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/Statistics/colorRandomizer.js","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","stats","avatar","className","css","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","stat","item","style","backgroundColor","Math","floor","random","percentage","id","FriendList","friends","friendLlist","isOnline","online","offline","width","TransactionHistory","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76035313.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__6ch0o\",\"description\":\"Profile_description__1VcsV\",\"avatar\":\"Profile_avatar__2Hq64\",\"name\":\"Profile_name__3VUiW\",\"tag\":\"Profile_tag__1oASE\",\"location\":\"Profile_location__2i9ha\",\"stats\":\"Profile_stats__k1rz3\",\"label\":\"Profile_label__O6sPT\",\"quantity\":\"Profile_quantity__3b6v5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2cPZf\",\"title\":\"Statistics_title__1x6DO\",\"statList\":\"Statistics_statList__3GmHa\",\"item\":\"Statistics_item__1JNlt\",\"label\":\"Statistics_label__1FAbx\",\"percentage\":\"Statistics_percentage__35l2S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendLlist\":\"FriendList_friendLlist__A43Ks\",\"item\":\"FriendList_item__2cHjW\",\"avatar\":\"FriendList_avatar__15fiu\",\"status\":\"FriendList_status__27fEK\",\"online\":\"FriendList_online__1qux7 FriendList_status__27fEK\",\"offline\":\"FriendList_offline__KoJLo FriendList_status__27fEK\",\"name\":\"FriendList_name__11B9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3Vok7\",\"title\":\"TransactionHistory_title__1MaRT\",\"label\":\"TransactionHistory_label__3AhH1\"};","import PropTypes from 'prop-types';\r\nimport css from 'components/Profile/Profile.module.css';\r\n\r\nexport const Profile = ({ name, tag, location, stats, avatar }) => {\r\n    return (\r\n        <div className={css.profile}>\r\n            <div className={css.description}>\r\n                <img src={avatar} alt=\"Аватар пользователя\" className={css.avatar} />\r\n                <p className={css.name}>{name}</p>\r\n                <p className={css.tag}>@{tag}</p>\r\n                <p className={css.location}>{location}</p>\r\n            </div>\r\n            <ul className={css.stats}>\r\n                <li>\r\n                    <span className={css.label}>Followers</span>\r\n                    <span className={css.quantity}>{stats.followers}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={css.label}>Views</span>\r\n                    <span className={css.quantity}>{stats.views}</span>\r\n                </li>\r\n                <li>\r\n                    <span className={css.label}>Likes</span>\r\n                    <span className={css.quantity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    stats: PropTypes.exact({\r\n        followers: PropTypes.number.isRequired,\r\n        views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n    }),\r\n};","import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\nimport { colorRandomizer } from './colorRandomizer';\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n    return (\r\n        <section className={css.statistics}>\r\n            {title && <h2 className={css.title}>{title}</h2>}\r\n            <ul className={css.statList}>\r\n                {stats.map(stat => (\r\n                    <li\r\n                        className={css.item}\r\n                        key={stat.id}\r\n                        style={{ backgroundColor: colorRandomizer() }}\r\n                    >\r\n                        <span className={css.label}>{stat.label}</span>\r\n                        <span className={css.percentage}>{stat.percentage}%</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    );\r\n};\r\nStatistics.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired\r\n        })\r\n\r\n    ),\r\n};","export const colorRandomizer = () => {\r\n    const r = Math.floor(Math.random() * 256);\r\n    const g = Math.floor(Math.random() * 256);\r\n    const b = Math.floor(Math.random() * 256);\r\n    const backgroundColor = 'rgb(' + r + ',' + g + ',' + b + ')';\r\n    return backgroundColor;\r\n};","import PropTypes from 'prop-types';\r\nimport css from './FriendList.module.css';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={css.friendLlist}>\r\n            {friends.map(({ id, isOnline, avatar, name }) => (\r\n                <li key={id}>\r\n                    <div className={css.item}>\r\n                        <span className={isOnline ? css.online : css.offline}></span>\r\n                        <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\r\n                        <p className={css.name}>{name}</p>\r\n                    </div>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n            id: PropTypes.number.isRequired,\r\n        })\r\n    ),\r\n};","import css from './TransactionHistory.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TransactionHistory = ({ items }) => {\r\n    return (\r\n        <table className={css.transactionHistory}>\r\n            <thead>\r\n                <tr className={css.title}>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {items.map(item => (\r\n                    <tr className={css.label} key={item.id}>\r\n                        <td>{item.type}</td>\r\n                        <td>{item.amount}</td>\r\n                        <td>{item.currency}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        })\r\n    )\r\n};","import { Profile } from 'components/Profile/Profile';\r\nimport user from 'components/Profile/users.json';\r\nimport { Statistics } from 'components/Statistics/Statistics';\r\nimport { FriendList } from 'components/FriendList/FriendList';\r\nimport { TransactionHistory } from 'components/TransactionHistory/TransactionHistory';\r\n\r\nimport statisticalData from 'components/Statistics/statistical-data.json';\r\nimport friends from 'components/FriendList/FriendsList.json';\r\nimport transactions from 'components/TransactionHistory/transactions.json';\r\n\r\nexport default function App() {\r\n    return (\r\n        <div>\r\n            <Profile\r\n                name={user.name}\r\n                tag={user.tag}\r\n                location={user.location}\r\n                avatar={user.avatar}\r\n                stats={user.stats}\r\n            />\r\n            <Statistics title=\"Upload stats\" stats={statisticalData} />;\r\n            <FriendList friends={friends} />;\r\n            <TransactionHistory items={transactions} />;\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}